# Code based on this file: https://github.com/neo4j/neo4j-graphrag-python/blob/main/.github/workflows/pr-e2e-tests.yaml

name: 'Neo4j Parallel Spark Loader Tests'

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.13']
        neo4j-tag:
          - 'latest'
    services:
      
      neo4j:
        image: neo4j:${{ matrix.neo4j-tag }}
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_ACCEPT_LICENSE_AGREEMENT: 'eval'
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7687:7687
          - 7474:7474
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Docker Prune
        run: |
          docker system prune -af
          docker volume prune -f
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Set Python version for Poetry
        run: poetry env use python${{ matrix.python-version }}
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-cache --with dev --all-extras
      - name: Clear Poetry cache
        run: poetry cache clear --all .
      - name: Run tests
        shell: bash
        run: make test